{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/ServiceAdd.js","components/ServiceList.js","components/ServiceAddClassBased.js","components/ServiceListClassBased.js","App.js","serviceWorker.js","reducers/serviceList.js","reducers/serviceAdd.js","store/index.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","EDIT_SERVICE","CANCEL_SERVICE","CHANGE_SERVICE_FIELD","changeServiceField","name","value","type","payload","addService","id","price","removeService","cancelService","editService","ServiceAdd","item","useSelector","state","serviceAdd","dispatch","useDispatch","handleChange","useCallback","evt","target","handleSubmit","preventDefault","handleCancel","onSubmit","onChange","onClick","ServiceList","items","serviceList","handleRemove","handleEdit","map","o","className","ServiceAddClassBased","props","onSave","onCancel","this","Component","connect","ownProps","ServiceListClassBased","App","Boolean","window","location","hostname","match","initialState","nanoid","reducer","combineReducers","action","Number","filter","service","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66f44b04.chunk.js","sourcesContent":["export const ADD_SERVICE = \"ADD_SERVICE\";\nexport const REMOVE_SERVICE = \"REMOVE_SERVICE\";\nexport const EDIT_SERVICE = \"EDIT_SERVICE\";\nexport const CANCEL_SERVICE = \"CANCEL_SERVICE\";\nexport const CHANGE_SERVICE_FIELD = \"CHANGE_SERVICE_FIELD\";\n","import {\n    CHANGE_SERVICE_FIELD,\n    EDIT_SERVICE,\n    CANCEL_SERVICE,\n    ADD_SERVICE,\n    REMOVE_SERVICE\n  } from \"./actionTypes\";\n  \n  export const changeServiceField = (name, value) => ({\n    type: CHANGE_SERVICE_FIELD,\n    payload: {\n      name,\n      value\n    }\n  });\n  \n  export const addService = (id, name, price) => ({\n    type: ADD_SERVICE,\n    payload: {\n      id,\n      name,\n      price\n    }\n  });\n  \n  export const removeService = id => ({\n    type: REMOVE_SERVICE,\n    payload: {\n      id\n    }\n  });\n  \n  export const cancelService = () => ({\n    type: CANCEL_SERVICE\n  });\n  \n  export const editService = (id, name, price) => ({\n    type: EDIT_SERVICE,\n    payload: {\n      id,\n      name,\n      price\n    }\n  });\n  ","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  changeServiceField,\n  addService,\n  cancelService,\n} from \"../actions/actionCreators\";\n\nfunction ServiceAdd() {\n  const item = useSelector((state) => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  const handleChange = useCallback(\n    (evt) => {\n      const { name, value } = evt.target;\n      dispatch(changeServiceField(name, value));\n    },\n    [dispatch]\n  );\n\n  const handleSubmit = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      dispatch(addService(item.id, item.name, item.price));\n    },\n    [dispatch, item.id, item.name, item.price]\n  );\n\n  const handleCancel = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      dispatch(cancelService());\n    },\n    [dispatch]\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"name\" onChange={handleChange} value={item.name} />\n      <input name=\"price\" onChange={handleChange} value={item.price} />\n      <button type=\"submit\">Save</button>\n      <button onClick={handleCancel}>Cancel</button>\n    </form>\n  );\n}\n\nexport default ServiceAdd;\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeService, editService } from \"../actions/actionCreators\";\n\nfunction ServiceList() {\n  const items = useSelector((state) => state.serviceList);\n  const dispatch = useDispatch();\n\n  const handleRemove = useCallback(\n    (id) => {\n      dispatch(removeService(id));\n    },\n    [dispatch]\n  );\n\n  const handleEdit = useCallback(\n    (id, name, price) => {\n      dispatch(editService(id, name, price));\n    },\n    [dispatch]\n  );\n\n  return (\n    <ul>\n      {items.map((o) => (\n        <li key={o.id}>\n          {o.name} {o.price}\n          <button onClick={() => handleEdit(o.id, o.name, o.price)}>\n            <i className =\"edit icon\"></i>\n          </button>\n          <button onClick={() => handleRemove(o.id)}>\n            <i className =\"trash alternate icon\"></i>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ServiceList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  changeServiceField,\n  addService,\n  cancelService,\n} from \"../actions/actionCreators\";\n\nclass ServiceAddClassBased extends Component {\n  static propTypes = {\n    item: PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n    onSave: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.target;\n    this.props.onChange(name, value);\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.onSave(\n      this.props.item.id,\n      this.props.item.name,\n      this.props.item.price\n    );\n  };\n\n  handleCancel = (evt) => {\n    evt.preventDefault();\n    this.props.onCancel();\n  };\n\n  render() {\n    const { item } = this.props;\n\n    return item ? (\n      <form onSubmit={this.handleSubmit}>\n        <input name=\"name\" onChange={this.handleChange} value={item.name} />\n        <input name=\"price\" onChange={this.handleChange} value={item.price} />\n        <button type=\"submit\">Save</button>\n        <button onClick={this.handleCancel}>Cancel</button>\n      </form>\n    ) : null;\n  }\n}\n\nconst mapStateToProps = (state) => ({ item: state.serviceAdd });\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onChange: (name, value) => dispatch(changeServiceField(name, value)),\n    onSave: (id, name, price) => dispatch(addService(id, name, price)),\n    onCancel: () => dispatch(cancelService()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ServiceAddClassBased);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { removeService, editService } from \"../actions/actionCreators\";\nimport { connect } from \"react-redux\";\n\nclass ServiceListClassBased extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      })\n    ).isRequired,\n  };\n\n  handleRemove = (id) => {\n    this.props.removeService(id);\n  };\n\n  handleEdit = (id, name, price) => {\n    this.props.editService(id, name, price);\n  };\n\n  render() {\n    const { items } = this.props;\n\n    return (\n      <ul>\n        {items &&\n          items.map((o) => (\n            <li key={o.id}>\n              {o.name} {o.price}\n              <button onClick={() => this.handleEdit(o.id, o.name, o.price)}>\n                <i className =\"edit icon\"></i>\n              </button>\n              <button onClick={() => this.handleRemove(o.id)}>\n                <i className =\"trash alternate icon\"></i>\n              </button>\n            </li>\n          ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ items: state.serviceList });\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    editService: (id, name, price) => dispatch(editService(id, name, price)),\n    removeService: (id) => dispatch(removeService(id)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ServiceListClassBased);\n","import React, { Fragment } from \"react\";\nimport ServiceAdd from \"./components/ServiceAdd\";\nimport ServiceList from \"./components/ServiceList\";\nimport ServiceAddClassBased from \"./components/ServiceAddClassBased\";\nimport ServiceListClassBased from \"./components/ServiceListClassBased\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <ServiceAdd />\n      <ServiceList />\n      <hr />\n      <ServiceAddClassBased />\n      <ServiceListClassBased />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { nanoid } from 'nanoid';\nimport {ADD_SERVICE, REMOVE_SERVICE} from '../actions/actionTypes'\n\nconst initialState = [\n  {id: nanoid(), name: 'Замена стекла', price: 21000},\n  {id: nanoid(), name: 'Замена дисплея', price: 25000},\n  {id: nanoid(), name: 'Замена аккумулятора', price: 4000},\n  {id: nanoid(), name: 'Замена микрофона', price: 2500},\n];\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE:\n      const {name, price} = action.payload;\n      return [...state, {id: nanoid(), name, price: Number(price)}];\n    case REMOVE_SERVICE:\n      const {id} = action.payload;\n      return state.filter(service => service.id !== id);\n    default:\n      return state;\n  }\n}\n","import {\n    CHANGE_SERVICE_FIELD,\n    ADD_SERVICE,\n    EDIT_SERVICE,\n    REMOVE_SERVICE,\n    CANCEL_SERVICE,\n  } from \"../actions/actionTypes\";\n  \n  const initialState = {\n    id: null,\n    name: \"\",\n    price: \"\",\n  };\n  \n  export default function serviceAddReducer(state = initialState, action) {\n    switch (action.type) {\n      case CHANGE_SERVICE_FIELD:\n        const { name, value } = action.payload;\n        return {\n          ...state,\n          [name]: value,\n        };\n      case ADD_SERVICE:\n      case CANCEL_SERVICE: {\n        return { ...initialState };\n      }\n      case EDIT_SERVICE: {\n        const { id, name, price } = action.payload;\n        return { ...state, id, name, price };\n      }\n      case REMOVE_SERVICE: {\n        const { id } = action.payload;\n        return state.id === id ? { ...initialState } : state;\n      }\n      default:\n        return state;\n    }\n  }\n  ","import { createStore, combineReducers } from \"redux\";\nimport serviceListReducer from \"../reducers/serviceList\";\nimport serviceAddReducer from \"../reducers/serviceAdd\";\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}